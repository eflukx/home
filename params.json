{"name":"Home","tagline":"Home automation software stack","body":"Data logging @Home\r\n==\r\n\r\nThis project has the aim to provide realtime insight in the energie consumption, solar production and the use of other natural resources in the home environment.\r\n\r\n> Please note! This software is _not_ ready for prime-time and / or general use. There are no wizards or install scripts that will gently guide you and the software is still in it's _very_ early alpha stage.\r\n\r\n\r\nOverall architecture\r\n==\r\n\r\nThe project comprises of two components; **kapture**, for harvesting data and **kultivate** for giving insights. Measurement data is stored in a [Redis](http://redis.io) database and graphs are rendered using [Highcharts](http://www.highcharts.com/) that are fed via a JSON API hosted by [Sinatra](http://www.sinatrarb.com). \r\n\r\nKapture plugins\r\n--\r\n\r\nKapture is build around a naive plugin system where each logger gets is own thread and can dump data into the backend database and publish updates to the UI.\r\n\r\nCurrently the following devices can be monitored:\r\n\r\n* Dutch Smart Meter 'P1' telemetry\r\n\t* Electricity & Gas consumption during the day / week \r\n\t* Live power usage  \r\n\r\nOn the todo list are:\r\n\r\n* SMA Solar converter via [SMA Spot](https://code.google.com/p/sma-spot/) \r\n* OpenTherm gateway\r\n\r\n\r\nKultivate \r\n--\r\n\r\nKultivate is a Sinatra web-app that servers the raw measurement data via JSON. Together with some client-side JavaScript transformation graphs are rendered that show the historic data and the actual power consumption.\r\n\r\nThe [data-range-parser](https://github.com/mobz/date-range-parser) library is used to construct historic data range queries such as 'yesterday', 'last week' and '15->16'.\r\n\r\nOn the todo list are:\r\n\r\n* A lot more graphs and comparison features\r\n* setup wizards\r\n* comparing between users and devices\r\n\r\nRequired Hardware\r\n==\r\n\r\n* Rapberry PI or simular\r\n* FT232 USB Cable Computer Cable [on ebay](http://www.ebay.com/itm/261101529602)\r\n\r\npinout:\r\n\r\n\t1 - Black:GND \r\n\t2 - Blue:CTS \r\n\t3 - Red:5V \r\n\t4 - Green:TXD \r\n\t5 - White:RXD \r\n\t6 - Yellow:RTS \r\n\r\n* Smart meter \r\n\r\nconnection:\r\n\r\n\tpin nr / RJ11 function\r\n\r\n\t2 - request (RTS)\r\n\t3 - ground (GND)\r\n\t4 - N.C. (N.C.)\r\n\t5 - data (RxD)\r\n\t\r\nFor more informatio see this article on [gejanssen.com](http://gejanssen.com/howto/Slimme-meter-uitlezen/index.html)\r\n\r\nFT232 Signal invert\r\n----\r\n\r\nPlease keep in mind that the Rx signal sent by the Smart Meter is inverted. You can configure this chip using [ft232r_prog](http://rtr.ca/ft232r/) Execute the following command to check the configuration of you FT232 USB chip.\r\n\r\n\tsudo ./ft232r_prog --dump\r\n\r\ninspect the `rxd_inverted` property and make sure it is set to 1. If not, execute\r\n\r\n\tsudo ./ft232r_prog --invert_rxd\r\n\r\nto invert the Rx signal.\r\n\r\n\r\nInstallation\r\n===\r\n\r\nBoth Kapture & Kultivate are written in Ruby and thus require a working Ruby stack. The software has been tested on the 1.9 branch.\r\n\r\n\r\nRequired software\r\n---\r\n* Ruby 1.9 \r\n* Bundler\r\n* Redis\r\n\r\nKapture\r\n---\r\n\r\nTo install the required gems run the following command \r\n\r\n\tbundle install\r\n\r\nStart harvesting via\r\n\r\n\tbundle exed ruby application.rb\r\n\r\n*** USB serial device\r\n\r\nTo find your USB serial TTY execute the following command\r\n\r\n\tls /sys/bus/usb-serial/devices/\r\n\r\nThis gives you an overview of the connected devices (probably 1). Copy this value and execute\r\n\r\n\tvim kapture/plugins/p1_plugin.rb\r\n\r\nMake sure the `/dev/tty<some-name>` equals the device name you've just copied\r\n\r\nKultivate\r\n---\r\n\r\nTo install the required gems run the following command \r\n\r\n\tbundle install\r\n\r\nRun\r\n\r\n\tbundle exed rackup\r\n\r\nand surf to\r\n\r\n\thttp://your-machine::9292\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}